 <!DOCTYPE html> 
  <head>
  <script type="text/javascript" src="http://ajax.googleapis.com/ajax/libs/jquery/1.10.2/jquery.min.js"></script>
  <script src="https://ajax.googleapis.com/ajax/libs/jqueryui/1.8.15/jquery-ui.min.js"></script>
  <link rel="stylesheet" href="//netdna.bootstrapcdn.com/bootstrap/3.1.1/css/bootstrap.min.css">
  <script src="//netdna.bootstrapcdn.com/bootstrap/3.1.1/js/bootstrap.min.js"></script>

  	<title> Enron Visualization</title>
  </head>

  <body> 
 <style> 
.link {  
stroke: #666;
opacity: 0.6;
stroke-width: 1.5px; 
} 
.node circle { 
stroke-width: 4px; 

} 
.node text { 
font: 18px times; 
stroke: black;
color: black;
opacity: 1;

} 
</style> 

<script src="http://d3js.org/d3.v3.min.js"></script>
<div class="container-fluid"> 

<div class="row"> 
	<div class="col-md-6"> <h1> Enron Network Visualization</h1>
	<hr>
	 </div>
	</div>
	<div class="row">
	<div class="col-md-8">
	<p class="lead"> made for Pomona college math research by tim kaye + friends in may 2014</p>
	<p class="lead"> built using the cmu enron corpus, d3 and r </p>
	</div>
</div>

<div class="col-md-11 col-md-offset-2">

<div class="graph"> 


<script> 
 

var width = 1200, 
	height = 900;

var svg = d3.select(".graph").append("svg") 
	.attr("width", width) 
	.attr("height", height); 



var nodes = [];
d3.json("nodes.json", function(error, data) {
	nodes= data;
});

var links = [];
 d3.json("links.json", function(error, data) {
 	console.log(error)
  	links = data;
  });


var force = d3.layout.force() 
	//.nodes(nodes) 
	//.links(links) 
	.size([width, height]) 
	.linkDistance(100) 
	.charge(-200);
	
	//.start(); 

d3.json("original.json", function(error, graph) {
  force
      .nodes(graph.nodes)
      .links(graph.links)
      .start(); 

var link = svg.selectAll(".link") 
	.data(graph.links) 
	.enter().append("line") 
	.attr("class", "link")
	.style("stroke-width", function(d) { return Math.sqrt(d.value*0.04); });

var color = d3.scale.category20c();
var colorOutside = d3.scale.category20b();

var node = svg.selectAll(".node") 
	.data(graph.nodes)
	.enter().append("g") 
	.attr("class", "node") 
	.style("fill", function(d) { return color(d.title); })
	.style("stroke", function(d) { return colorOutside(d.department); })
	.on('mouseover', mouseover)
	.on('mouseout', mouseout)
	.on('click', click)
	.call(force.drag); 

	node.append("circle") 
	.attr("r", 8);

	node.append("text") 
	.text(function(d) { return d.name; })
	.style("opacity", 0.0); 

	

force.on("tick", function() { 
	link 
	.attr("x1", function(d) { return d.source.x; }) 
	.attr("y1", function(d) { return d.source.y; }) 
	.attr("x2", function(d) { return d.target.x; }) 
	.attr("y2", function(d) { return d.target.y; }); 

node.attr("transform", function(d) { return "translate(" + d.x + "," + d.y + ")"; }); 
});

function mouseover() { 
	var nodeSelection = d3.select(this);
	    nodeSelection.style({"fill": '#6AD780'});
	    nodeSelection.select("text").style({opacity:'1'});
	    nodeSelection.select("text").style({"font": "17px serif"});
	   	nodeSelection.select("text").style({"fill": "black"});
	}

function mouseout() { 
		var nodeSelection = d3.select(this);
		nodeSelection.style({"fill": function(d) { return color(d.title);}});
		nodeSelection.select("text").style({opacity: '0.0'});
} 

function click() {
	d3.select(this).select("circle").transition()
		.duration(750)
		.ease("elastic")
		.delay(1000)
		.each("end", function(d) { d3.select("this").transition().attr("r", 8).style("fill", "#6AD780"); });
		}

//var links = svg.select('.link')
//links.transition().duration(5000).style({"stroke-width": 0});
});

</script>
</div>
</div>
 </body>