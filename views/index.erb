<!DOCTYPE html>
<html lang="en">
    <head>
        <meta charset="utf-8">
        <title>D3 Test</title>
        <script src="http://mbostock.github.com/d3/d3.js"></script>
    </head>
    <style>

.node {
  stroke: #fff;
  stroke-width: 1.5px;
}

.link {
  stroke: #999;
  stroke-opacity: .6;
}

</style>
    <body>
        <ls></ls>
        <script type="text/javascript">
        //To start in terminal - shotgun -p 4567 app.rb
        /*   var dataset = [ 5, 10, 15, 20, 25 ];
           for (i =0; i< dataset.length; i++) {
                d3.select("ls").append("li").text("Ahh" + dataset[i]);
           }
           d3.select("body").selectAll("p")
              .data(dataset)
              .enter()
              .append("p")
              .text(function(d){ return d;})
              .style("color", function(d) {
                   if (d >= 15) {   //Threshold of 15
                        return "orange";
                    } else {
                        return "black";
                    }
                });
              d3.select("body").append("p").text("New paragraph!"); */
        </script>
        <style>
           div.bar {
                display: inline-block;
                width: 20px;
                height: 75px;   /* We'll override this later */
                background-color: teal;
                margin-right: 2px;
            }
        </style>
        <div class="bar"></div>
        <script type="text/javascript">
         /*  var dataset = [ 25, 7, 5, 26, 11, 8, 25, 14, 23, 19,
                14, 11, 22, 29, 11, 13, 12, 17, 18, 10,
                24, 18, 25, 9, 3 ];

            d3.select("body").selectAll("div")
                .data(dataset)
                .enter()
                .append("div")
                .attr("class", "bar")
                .style("height", function(d) { return 2*d + "px";});     */
 
        </script>

        <svg width="500" height="50">
        <ellipse cx="250" cy="25" rx="100" ry="25"/>
        </svg>

        <svg width="500" height="50">
        <line x1="0" y1="0" x2="500" y2="50" stroke="green"/>
        </svg>

        <text x="250" y="25" fill="gray">Easy-peasy</text>



        <style> 
                .pumpkin {
            fill: yellow;
            stroke: orange;
            stroke-width: 5;
         }
         </style>



        <svg width="500" height="500">
            <circle cx="100" cy="100" r = "35" class="pumpkin"/>
            <circle cx="25" cy="25" r="20"
                fill="rgba(128, 0, 128, 0.75)" 
                stroke="rgba(0, 255, 0, 0.25)" stroke-width="10"/>
            <circle cx="75" cy="25" r="20"
                    fill="rgba(0, 255, 0, 0.75)"
                    stroke="rgba(0, 0, 255, 0.25)" stroke-width="10"/>
            <circle cx="125" cy="25" r="20"
                    fill="rgba(255, 255, 0, 0.75)"
                    stroke="rgba(255, 0, 0, 0.25)" stroke-width="10"/>

        </svg>

        <script type="text/javascript">
            var dataset = [ 25, 7, 5, 26, 11, 8, 25, 14, 23, 19, 14, 11, 22, 29, 11, 13, 12, 17, 18, 10, 24, 18, 25, 9, 3 ];
            var w = 500;
            var h = 100;
            var svg = d3.select("body") //creates the SVG frame for where fun things can happen .
                .append("svg")
                .attr("width", w)
                .attr("height", h);

          /*  svg.selectAll("rect")
                .data(dataset)
                .enter()
                .append("rect")
                .attr("x", function(d,i) {return i * 21;})
                .attr("y",function(d) { return h-d;})
                .attr("fill", function(d) {
                    return "rgb(0, 0, " + (d * 10) + ")";
                })
                .attr("stroke", "red")
                .attr("width", w / dataset.length - 1)
                .attr("height", function(d) {return d*4;});

            svg.selectAll("text")
                .data(dataset)
                .enter()
                .append("text")
                .text(function(d) {return d;})
                .attr("x", function(d, i) {
                    return i * (w / dataset.length) + 5;  // +5
               })
               .attr("y", function(d) {
                    return h - (d * 4) + 15;              // +15
               });   */




    
            var circles = svg.selectAll("circle")
                .data(dataset)
                .enter()
                .append("circle");

            circles.attr("cx", function(d, i) {return (i * 50) + 25;})
                 .attr("cy", h/2)
                 .attr("fill", "rgba(0, 255, 0, 0.75)")
                 .attr("stroke", "rgba(0, 0, 255, 0.25)")
                 .attr("stroke-width", 5)
                 .attr("r", function(d) {return d;});
        </script>

        <script type="text/javascript">

            //Scatterplot Code
            var w = 500;
            var h = 150;
            var dataset = [
                [5, 20], [480, 90], [250, 50], [100, 33], [330, 95],
                [410, 12], [475, 44], [25, 67], [85, 21], [220, 88]
              ];
            var svg = d3.select("body")
                .append("svg")
                .attr("width", w)
                .attr("height", h)

            svg.selectAll("circle")
                .data(dataset)
                .enter()
                .append("circle") 
                .attr("cx", function(d) { return d[0];})
                .attr("cy", function(d) { return d[1];})
                .attr("r", function(d) { return Math.sqrt(h - d[1]);});

            var xAxis = d3.svg.axis();

        </script>
        <script>

var width = 960,
    height = 500;

var color = d3.scale.category20();

var force = d3.layout.force()
    .charge(-120)
    .linkDistance(30)
    .size([width, height]);

var svg = d3.select("body").append("svg")
    .attr("width", width)
    .attr("height", height);

d3.json("/miserables.json", function(error, graph) {
  force
      .nodes(graph.nodes)
      .links(graph.links)
      .start();

  var link = svg.selectAll(".link")
      .data(graph.links)
    .enter().append("line")
      .attr("class", "link")
      .style("stroke-width", function(d) { return Math.sqrt(d.value); });

  var node = svg.selectAll(".node")
      .data(graph.nodes)
    .enter().append("circle")
      .attr("class", "node")
      .attr("r", 5)
      .style("fill", function(d) { return color(d.group); })
      .call(force.drag);

  node.append("title")
      .text(function(d) { return d.name; });

  force.on("tick", function() {
    link.attr("x1", function(d) { return d.source.x; })
        .attr("y1", function(d) { return d.source.y; })
        .attr("x2", function(d) { return d.target.x; })
        .attr("y2", function(d) { return d.target.y; });

    node.attr("cx", function(d) { return d.x; })
        .attr("cy", function(d) { return d.y; });
  });
});

</script>



    </body>
</html>     